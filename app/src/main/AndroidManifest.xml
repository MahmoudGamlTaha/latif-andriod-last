<?xml version="1.0" encoding="utf-8"?><manifest xmlns:android="http://schemas.android.com/apk/res/android"    package="com.latifapp.latif">    <!--         The ACCESS_COARSE/FINE_LOCATION permissions are not required to use         Google Maps Android API v2, but you must specify either coarse or fine         location permissions for the "MyLocation" functionality.    -->    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />    <uses-permission android:name="android.permission.INTERNET" />    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />    <!-- Required only when requesting background location access on      Android 10 (API level 29) and higher.    -->    <uses-permission android:name="android.permission.ACCESS_BACKGROUND_LOCATION" />    <application        android:name=".ui.MyApp"        android:allowBackup="true"        android:icon="@drawable/logo"        android:label="@string/app_name"        android:roundIcon="@drawable/logo"        android:supportsRtl="true"        android:theme="@style/Theme.Latif">        <activity            android:name=".ui.main.blogs.blogsDetails.BlogDetailsActivity"            android:label="@string/title_activity_blog_details"            android:theme="@style/Theme.Latif.NoActionBar"></activity>        <activity android:name=".ui.main.blogs.createBlog.CreateBlogActivity" />        <!--             The API key for Google Maps-based APIs is defined as a string resource.             (See the file "res/values/google_maps_api.xml").             Note that the API key is linked to the encryption key used to sign the APK.             You need a different API key for each encryption key, including the release key that is used to             sign the APK for publishing.             You can define the keys for the debug and release targets in src/debug/ and src/release/.        -->        <meta-data            android:name="com.google.android.geo.API_KEY"            android:value="@string/google_maps_key" />        <activity            android:name=".ui.map.MapsActivity"            android:label="@string/title_activity_maps" />        <activity android:name=".ui.sell.SellActivity" />        <activity android:name=".ui.main.chat.chatPage.ChatPageActivity" />        <activity android:name=".ui.filter.FilterActivity" />        <activity android:name=".ui.filter.FilterFormActivity" />        <activity android:name=".ui.subscribe.SubscribeActivity" />        <activity android:name=".ui.details.DetailsActivity" />        <activity            android:name=".ui.main.home.MainActivity"            android:launchMode="singleTask"            android:screenOrientation="portrait"            android:windowSoftInputMode="adjustNothing">            <intent-filter>                <action android:name="android.intent.action.VIEW" />                <category android:name="android.intent.category.DEFAULT" />                <category android:name="android.intent.category.BROWSABLE" />                <data                    android:host="latifapp.com"                    android:scheme="https" />            </intent-filter>        </activity>        <activity android:name=".ui.auth.signup.SignUpActivity" />        <activity android:name=".ui.auth.login.LoginActivity" />        <activity android:name=".ui.main.profile.ProfileActivity" />        <activity android:name=".ui.SplashActivity">            <intent-filter>                <action android:name="android.intent.action.MAIN" />                <category android:name="android.intent.category.LAUNCHER" />            </intent-filter>        </activity>        <service android:name="com.myapp.UploadListner" />        <meta-data            android:name="cloudinaryCallbackService"            android:value="com.myapp.UploadListner" />        <meta-data            android:name="CLOUDINARY_URL"            android:value="cloudinary://784911186423683:9CYslgAjFjt0mgAc7R0SrjCUGd0@highcoder" />    </application></manifest>